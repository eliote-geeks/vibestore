version: '3.8'

services:
  # Application Laravel
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: reveilart_app
    restart: unless-stopped
    working_dir: /var/www/html
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=REVEIL4ARTISTS
      - DB_USERNAME=postgres
      - DB_PASSWORD=password
      - REDIS_HOST=redis
      - REDIS_PASSWORD=null
      - REDIS_PORT=6379
      - CACHE_STORE=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
    volumes:
      - ./storage:/var/www/html/storage
      - ./public/music:/var/www/html/public/music
      - ./public/video:/var/www/html/public/video
      - ./public/images:/var/www/html/public/images
    ports:
      - "8000:80"
    depends_on:
      - postgres
      - redis
    networks:
      - reveilart_network

  # Base de données PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: reveilart_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: REVEIL4ARTISTS
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - reveilart_network

  # Redis pour cache et sessions
  redis:
    image: redis:7-alpine
    container_name: reveilart_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --replica-read-only no
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - reveilart_network

  # Queue Worker pour les tâches en arrière-plan
  queue:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: reveilart_queue
    restart: unless-stopped
    working_dir: /var/www/html
    command: php artisan queue:work --sleep=3 --tries=3 --max-time=3600
    environment:
      - APP_ENV=local
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=REVEIL4ARTISTS
      - DB_USERNAME=postgres
      - DB_PASSWORD=password
      - REDIS_HOST=redis
      - REDIS_PASSWORD=null
      - REDIS_PORT=6379
      - QUEUE_CONNECTION=redis
    volumes:
      - ./storage:/var/www/html/storage
      - ./public/music:/var/www/html/public/music
      - ./public/video:/var/www/html/public/video
    depends_on:
      - postgres
      - redis
    networks:
      - reveilart_network

  # WebSocket Server pour les compétitions live
  websocket:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: reveilart_websocket
    restart: unless-stopped
    working_dir: /var/www/html
    command: php websocket-server.php
    environment:
      - APP_ENV=local
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=REVEIL4ARTISTS
      - DB_USERNAME=postgres
      - DB_PASSWORD=password
      - REDIS_HOST=redis
      - REDIS_PASSWORD=null
      - REDIS_PORT=6379
    volumes:
      - ./storage:/var/www/html/storage
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
    networks:
      - reveilart_network

  # Nginx pour servir les fichiers statiques (optionnel)
  nginx:
    image: nginx:alpine
    container_name: reveilart_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./public:/var/www/html/public:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - reveilart_network

  # Monitoring avec Redis Commander (optionnel)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: reveilart_redis_commander
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - reveilart_network
    profiles:
      - tools

  # pgAdmin pour PostgreSQL (optionnel)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: reveilart_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@reveilart.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - reveilart_network
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  reveilart_network:
    driver: bridge