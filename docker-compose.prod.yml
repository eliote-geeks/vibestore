version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.working
    container_name: vibestore_app
    restart: unless-stopped
    working_dir: /var/www/html
    env_file:
      - .env.production
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_HOST=db
      - DB_PORT=5432
      - DB_CONNECTION=pgsql
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - ./storage:/var/www/html/storage
      - ./public/music:/var/www/html/public/music
      - ./public/video:/var/www/html/public/video
      - ./public/images:/var/www/html/public/images
    depends_on:
      - db
      - redis
    networks:
      - vibestore-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vibestore.rule=Host(`vibestordistr.com`) || Host(`www.vibestordistr.com`)"
      - "traefik.http.routers.vibestore.tls.certresolver=letsencrypt"
      - "traefik.http.services.vibestore.loadbalancer.server.port=80"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.vibestore-http.rule=Host(`vibestordistr.com`) || Host(`www.vibestordistr.com`)"
      - "traefik.http.routers.vibestore-http.entrypoints=web"
      - "traefik.http.routers.vibestore-http.middlewares=redirect-to-https"
      - "traefik.http.routers.vibestore.entrypoints=websecure"
      - "traefik.http.middlewares.secure-headers.headers.forcestsheader=true"
      - "traefik.http.middlewares.secure-headers.headers.sslredirect=true"
      - "traefik.http.routers.vibestore.middlewares=secure-headers"

  db:
    image: postgres:15-alpine
    container_name: vibestore_db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - vibestore-network

  redis:
    image: redis:7-alpine
    container_name: vibestore_redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - vibestore-network

  queue:
    build:
      context: .
      dockerfile: Dockerfile.working
    container_name: vibestore_queue
    restart: unless-stopped
    working_dir: /var/www/html
    command: php artisan queue:work --verbose --tries=3 --timeout=90
    env_file:
      - .env.production
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_HOST=db
      - DB_PORT=5432
      - DB_CONNECTION=pgsql
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - ./storage:/var/www/html/storage
    depends_on:
      - db
      - redis
    networks:
      - vibestore-network

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile.working
    container_name: vibestore_scheduler
    restart: unless-stopped
    working_dir: /var/www/html
    command: /bin/sh -c "while true; do php artisan schedule:run --verbose --no-interaction & sleep 60; done"
    env_file:
      - .env.production
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_HOST=db
      - DB_PORT=5432
      - DB_CONNECTION=pgsql
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - ./storage:/var/www/html/storage
    depends_on:
      - db
      - redis
    networks:
      - vibestore-network

  traefik:
    image: traefik:v3.0
    container_name: vibestore_traefik
    restart: unless-stopped
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=admin@vibestordistr.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--global.checknewversion=false"
      - "--global.sendanonymoususage=false"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_letsencrypt:/letsencrypt
    networks:
      - vibestore-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.vibestordistr.com`)"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.dashboard.service=api@internal"

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  traefik_letsencrypt:
    driver: local

networks:
  vibestore-network:
    driver: bridge