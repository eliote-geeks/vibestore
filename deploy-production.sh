#!/bin/bash

# Script de d√©ploiement pour VPS en production avec Docker
# Usage: ./deploy-production.sh

set -e

# Couleurs
GREEN='\033[0;32m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m'

log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

log_info "üöÄ D√©ploiement VibeStore en production Docker..."

# V√©rifier qu'on est sur le serveur
if [ ! -f "/var/www/vibestore/docker-compose.prod.yml" ]; then
    log_error "Ce script doit √™tre ex√©cut√© sur le serveur VPS dans /var/www/vibestore"
    exit 1
fi

# Configuration environnement production
log_info "Configuration environnement production..."
cp .env.docker .env
log_success "Configuration Docker activ√©e"

# Arr√™t des conteneurs existants
log_info "Arr√™t des conteneurs existants..."
docker-compose -f docker-compose.prod.yml down

# Pull des derni√®res modifications
log_info "R√©cup√©ration des derni√®res modifications..."
git pull origin main

# Build et d√©marrage des conteneurs
log_info "Build et d√©marrage des conteneurs Docker..."
docker-compose -f docker-compose.prod.yml build --no-cache
docker-compose -f docker-compose.prod.yml up -d

# Attendre que les conteneurs d√©marrent
log_info "Attente du d√©marrage des conteneurs..."
sleep 30

# Ex√©cution des migrations
log_info "Ex√©cution des migrations..."
docker exec vibestore_app php artisan migrate --force

# Nettoyage du cache
log_info "Nettoyage du cache..."
docker exec vibestore_app php artisan config:cache
docker exec vibestore_app php artisan route:cache
docker exec vibestore_app php artisan view:cache

# V√©rification de l'√©tat
log_info "V√©rification de l'√©tat des conteneurs..."
docker-compose -f docker-compose.prod.yml ps

# Test de l'application
log_info "Test de l'application..."
if curl -f -s -H "Host: vibestordistr.com" http://localhost > /dev/null; then
    log_success "üéâ D√©ploiement r√©ussi ! Application accessible"
else
    log_error "Probl√®me d√©tect√© avec l'application"
    docker-compose -f docker-compose.prod.yml logs --tail=20
fi

log_success "D√©ploiement termin√© !"
log_info "URLs :"
echo "  - http://vibestordistr.com     # Site principal"
echo "  - https://vibestordistr.com    # HTTPS (si SSL configur√©)"